<ResourceDictionary
     xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
     xmlns:themes="http://schemas.devexpress.com/winfx/2008/xaml/editors/themekeys"
     xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
     xmlns:controls="http://schemas.devexpress.com/winfx/2008/xaml/editors/internal"
     xmlns:native="http://schemas.devexpress.com/winfx/2008/xaml/core/internal"
     xmlns:dx="http://schemas.devexpress.com/winfx/2008/xaml/core"
     xmlns:dxe="http://schemas.devexpress.com/winfx/2008/xaml/editors"
     xmlns:dxb="http://schemas.devexpress.com/winfx/2008/xaml/bars">

    <ControlTemplate x:Key="{themes:DateNavigatorThemeKey ResourceKey=CellButtonTemplate, ThemeName=MetropolisDark}" TargetType="{x:Type controls:DateNavigatorCalendarCellButton}">
        <Grid SnapsToDevicePixels="True" Background="Transparent">
            <VisualStateManager.VisualStateGroups>
                <VisualStateGroup x:Name="CommonStates">
                    <VisualState x:Name="Normal" />
                    <VisualState x:Name="MouseOver">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderMouseOver" Storyboard.TargetProperty="Visibility" native:ValueSetter.Visibility="Visible" />
                            <ColorAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="ForegroundSolidColor2" Duration="0" To="White" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="Pressed" />
                    <VisualState x:Name="Disabled" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CellStatesSpecial">
                    <VisualState x:Name="CellStateSpecial">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="Content" Storyboard.TargetProperty="FontWeight" native:ValueSetter.FontWeight="Bold" />
                            <ColorAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="ForegroundSolidColor4" Duration="0" To="White" />
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderSpecial" Storyboard.TargetProperty="Visibility" native:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="CellStateNotSpecial" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CellStatesHoliday">
                    <VisualState x:Name="CellStateHoliday">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="ForegroundSolidColor5" Duration="0" To="#FFCC3333" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="CellStateNotHoliday" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CellStatesSelected">
                    <VisualState x:Name="CellStateSelected">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderSelected" Storyboard.TargetProperty="Visibility" native:ValueSetter.Visibility="Visible" />
                            <ColorAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="ForegroundSolidColor1" Duration="0" To="#FFFFFFFF" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="CellStateNotSelected" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CellStatesToday">
                    <VisualState x:Name="CellStateToday">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderToday" Storyboard.TargetProperty="Visibility" native:ValueSetter.Visibility="Visible" />
                            <ColorAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="ForegroundSolidColor3" Duration="0" To="Transparent" />
                        </Storyboard>
                    </VisualState>
                    <VisualState x:Name="CellStateNotToday" />
                </VisualStateGroup>
                <VisualStateGroup x:Name="CellStatesFocused">
                    <VisualState x:Name="CellStateNotFocused" />
                    <VisualState x:Name="CellStateFocused">
                        <Storyboard>
                            <ObjectAnimationUsingKeyFrames Storyboard.TargetName="BorderFocused" Storyboard.TargetProperty="Visibility" native:ValueSetter.Visibility="Visible" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
                <VisualStateGroup x:Name="CellStatesInactive">
                    <VisualState x:Name="CellStateActive" />
                    <VisualState x:Name="CellStateInactive">
                        <Storyboard>
                            <ColorAnimation Storyboard.TargetName="Content" Storyboard.TargetProperty="ForegroundSolidColor4" Duration="0" To="#FFD3D3D3" />
                        </Storyboard>
                    </VisualState>
                </VisualStateGroup>
            </VisualStateManager.VisualStateGroups>
            <Border x:Name="BorderToday" Background="LightGray" CornerRadius="0" Visibility="Collapsed" />
            <Border x:Name="BorderFocused" BorderBrush="DarkOrange" BorderThickness="1" CornerRadius="0" Visibility="Collapsed" />
            <Border x:Name="BorderMouseOver" Background="DarkOrange" CornerRadius="0" Visibility="Collapsed" />
            <Border x:Name="BorderSpecial" Background="Orange" CornerRadius="0" Visibility="Collapsed" />
            <Border x:Name="BorderSelected" Background="OrangeRed" CornerRadius="0" Visibility="Collapsed" />
            <dx:ContentContainer x:Name="Content" Content="{TemplateBinding Content}" HorizontalAlignment="Center"  VerticalAlignment="Center" />
        </Grid>
    </ControlTemplate>

  
    <DataTemplate x:Key="barStaticItemTemplate">
        <ContentControl>
            <dxb:BarStaticItem IsEnabled="{Binding IsEnabled}" BarItemDisplayMode="ContentAndGlyph" Content="{Binding Caption}" Glyph="{Binding Glyph}"></dxb:BarStaticItem>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="barButtonItemTemplate">
        <ContentControl>
            <dxb:BarButtonItem IsEnabled="{Binding IsEnabled}" BarItemDisplayMode="ContentAndGlyph" Command="{Binding Command}" CommandParameter="{Binding Caption}" Content="{Binding Caption}" Glyph="{Binding Glyph}"></dxb:BarButtonItem>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="separatorItemTemplate">
        <ContentControl>
            <dxb:BarItemSeparator></dxb:BarItemSeparator>
        </ContentControl>
    </DataTemplate>
    <DataTemplate x:Key="checkButtonItemTemplate">
        <ContentControl>
            <dxb:BarCheckItem IsEnabled="{Binding IsEnabled}" BarItemDisplayMode="ContentAndGlyph" Command="{Binding Command}" Content="{Binding Caption}" Glyph="{Binding Glyph}"></dxb:BarCheckItem>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="listItemTemplate">
        <ContentControl>
            <dxb:BarSubItem IsEnabled="{Binding IsEnabled}" BarItemDisplayMode="ContentAndGlyph" ItemTemplateSelector="{Binding Selector}" ItemLinksSource="{Binding Items}" Content="{Binding Caption}" Glyph="{Binding Glyph}"></dxb:BarSubItem>
        </ContentControl>
    </DataTemplate>

    <DataTemplate x:Key="customItemTemplate">
        <ContentControl Content="{Binding Content}"></ContentControl>
    </DataTemplate>
    
    <DataTemplate x:Key="dateItemTemplate">
        <ContentControl>

            <dxb:BarSplitButtonItem   Content="Date" Glyph="{dx:DXImage Image=Calendar_16x16.png}"   BarItemDisplayMode="ContentAndGlyph" >
                <dxb:BarSplitButtonItem.PopupControl>
                    <dxb:PopupControlContainer CloseOnClick="False">
                        <dxe:DateNavigator SpecialDates="{Binding DataContext.AvailableDates,RelativeSource={RelativeSource Self}}"  FocusedDate="{Binding DataContext.SelectedDate,RelativeSource={RelativeSource Self}}"  ShowTodayButton="True"  HighlightHolidays="False" HighlightSpecialDates="True"  IsMultiSelect="False" ></dxe:DateNavigator>
                    </dxb:PopupControlContainer>
                </dxb:BarSplitButtonItem.PopupControl>
            </dxb:BarSplitButtonItem>
        </ContentControl>
    </DataTemplate>


</ResourceDictionary>
